<div class="row">
  <div class="col-md-8">
    <ul class="nav nav-pills">
      <li<%= ' class=active' unless (session[:sort_order] === 'distance') %>>
        <%= link_to 'Sort by date', root_path(:sort => :date), :method => :post %>
      </li>
      <li<%= ' class=active' if (session[:sort_order] === 'distance') %>>
        <%= link_to 'Sort by distance', root_path(:sort => :distance), :method => :post %>
      </li>
      <li class='editable_location<%= ' text-muted' unless (session[:sort_order] === 'distance') %>' id="current_loc" data-longitude="<%= @location.longitude %>" data-latitude="<%= @location.latitude %>" data-preferred_distance_units="<%= current_user.try(:preferred_distance_units) || 'mi' %>">
        from <%= editable @location, :address %> <span id="in_city_state"><%= "(#{city_n_state(@location)})" unless @location.address_contains_city_state %></span>
      </li>
    </ul>
  </div>
</div>
<div class="row margin_top10">
  <div class="col-md-8">
    <%= render 'workshops/index' %>
  </div>
</div>

<% if session[:sort_order] === 'distance' %>
  <% ready_script do -%>
    $(".editable").editable({
      ajaxOptions: {type: 'PUT'},
      error: function(response, newValue) {
        show_bootstrap_alert({type: 'error', text: 'Not a valid address.'});
      },
      success: function(response, newValue) {
        if (response.address_contains_city_state) {
          $("#in_city_state").hide();
        } else {
          $("#in_city_state").text('(' + response.location.city + ', ' + response.location.state_code + ')').show();
        }
        location.reload(true);
      }
    });
    var current_loc = $("#current_loc"),
        cur_longitude = current_loc.data('longitude'),
        cur_latitude = current_loc.data('latitude'),
        units = current_loc.data('preferred_distance_units');

    $(".workshop_dist").each(function(index) {
      var _this = $(this),
          longitude = _this.data('longitude'),
          latitude = _this.data('latitude'),
          dist = getDistanceFromLatLonInKm(latitude, longitude, cur_latitude, cur_longitude);
      if (units == 'mi') {
        _this.text(Number(dist*0.621371).toFixed(1) + 'mi');
      } else {
        _this.text(Number(dist).toFixed(1) + 'km');
      };
    });
  <% end -%>
<% end %>